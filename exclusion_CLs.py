<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  
  

  


  <head>
    <title>
      exclusion_CLs.py on PhysicsAnalysisDatabase – Attachment
     – MadAnalysis5
    </title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <!--[if IE]><script type="text/javascript">window.location.hash = window.location.hash;</script><![endif]-->
        <link rel="search" href="/search" />
        <link rel="help" href="/wiki/TracGuide" />
        <link rel="alternate" href="/raw-attachment/wiki/PhysicsAnalysisDatabase/exclusion_CLs.py" type="text/x-python; charset=utf-8" title="Original Format" />
        <link rel="up" href="/wiki/PhysicsAnalysisDatabase" title="PhysicsAnalysisDatabase" />
        <link rel="start" href="/wiki" />
        <link rel="stylesheet" href="/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/pygments/trac.css" type="text/css" /><link rel="stylesheet" href="/chrome/common/css/code.css" type="text/css" />
        <link rel="shortcut icon" href="/chrome/common/trac.ico" type="image/x-icon" />
        <link rel="icon" href="/chrome/common/trac.ico" type="image/x-icon" />
    <script type="text/javascript" src="/chrome/common/js/jquery.js"></script><script type="text/javascript" src="/chrome/common/js/babel.js"></script><script type="text/javascript" src="/chrome/common/js/messages/en_US.js"></script><script type="text/javascript" src="/chrome/common/js/trac.js"></script><script type="text/javascript" src="/chrome/common/js/search.js"></script>
    <!--[if lt IE 7]>
    <script type="text/javascript" src="/chrome/common/js/ie_pre7_hacks.js"></script>
    <![endif]-->
      <script type="text/javascript" src="/chrome/common/js/folding.js"></script>
      <script type="text/javascript">
        jQuery(document).ready(function($) {
          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));
        });
      </script>
<!--    <link rel="stylesheet" type="text/css"
          href="${href.chrome('/site/acct_mgr/acct_mgr.css')}" />
    <link rel="stylesheet" type="text/css"
          href="${href.chrome('/site/acct_mgr/acct_mgr_login.css')}" /> -->
    <link rel="stylesheet" type="text/css" href="/chrome/site/style.css" />
    <link rel="stylesheet" type="text/css" href="/chrome/site/local.css" />
  </head>
  <body>
    <div id="siteheader">
    </div>
    <div id="banner">
      <div id="header">
        <a id="logo" href="/projects/madanalysis"><img src="/chrome/site/MA5.jpg" alt="MadAnalysis" height="53" width="53" /></a>
      </div>
      <form id="search" action="/search" method="get">
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/login">Login</a></li><li><a href="/prefs">Preferences</a></li><li><a href="/wiki/TracGuide">Help/Guide</a></li><li class="last"><a href="/about">About Trac</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
    <ul>
      <li class="last first active"><a href="/wiki">Wiki</a></li>
    </ul>
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
          <ul>
              <li class="last first"><a href="/wiki/PhysicsAnalysisDatabase">Back to PhysicsAnalysisDatabase</a></li>
          </ul>
        <hr />
      </div>
    <div id="content" class="attachment">
        <h1><a href="/wiki/PhysicsAnalysisDatabase">PhysicsAnalysisDatabase</a>: exclusion_CLs.py</h1>
        <table id="info" summary="Description">
          <tbody>
            <tr>
              <th scope="col">File exclusion_CLs.py,
                <span title="15720 bytes">15.4 KB</span>
                (added by bdumont, <a class="timeline" href="/timeline?from=2014-07-09T16%3A42%3A15%2B02%3A00&amp;precision=second" title="2014-07-09T16:42:15+02:00 in Timeline">7 months</a> ago)</th>
            </tr>
            <tr>
              <td class="message searchable">
                <p>
Statistics module for testing exclusion
</p>

              </td>
            </tr>
          </tbody>
        </table>
        <div id="preview" class="searchable">
          
  <table class="code"><thead><tr><th class="lineno" title="Line numbers">Line</th><th class="content"> </th></tr></thead><tbody><tr><th id="L1"><a href="#L1">1</a></th><td><span class="c">#! /usr/bin/env python</span></td></tr><tr><th id="L2"><a href="#L2">2</a></th><td></td></tr><tr><th id="L3"><a href="#L3">3</a></th><td><span class="c"># derive exclusions for the tested scenario from the signal regions of an</span></td></tr><tr><th id="L4"><a href="#L4">4</a></th><td><span class="c"># analysis implemented using MadAnalysis 5 (MA5), using a simplified procedure</span></td></tr><tr><th id="L5"><a href="#L5">5</a></th><td><span class="c"># and the CLs prescription</span></td></tr><tr><th id="L6"><a href="#L6">6</a></th><td></td></tr><tr><th id="L7"><a href="#L7">7</a></th><td><span class="c"># version 1.0 (July 9, 2014)</span></td></tr><tr><th id="L8"><a href="#L8">8</a></th><td><span class="c"># made by Beranger Dumont</span></td></tr><tr><th id="L9"><a href="#L9">9</a></th><td><span class="c"># based on toy MC code by Benjamin Fuks, Chris Wymant and Sam Bein</span></td></tr><tr><th id="L10"><a href="#L10">10</a></th><td></td></tr><tr><th id="L11"><a href="#L11">11</a></th><td><span class="c"># takes as input:</span></td></tr><tr><th id="L12"><a href="#L12">12</a></th><td><span class="c"># -- an XML analysis_name.info file that should be present in the same directory</span></td></tr><tr><th id="L13"><a href="#L13">13</a></th><td><span class="c"># as the analysis code, i.e. Build/SampleAnalyzer/User/Analyzer/</span></td></tr><tr><th id="L14"><a href="#L14">14</a></th><td><span class="c"># -- the SAF files for the cutflows of the tested scenario of interest in all</span></td></tr><tr><th id="L15"><a href="#L15">15</a></th><td><span class="c"># signal regions, where the information on acceptance*efficiency can be found</span></td></tr><tr><th id="L16"><a href="#L16">16</a></th><td><span class="c"># -- the cross section for the tested scenario (if not given as argument in</span></td></tr><tr><th id="L17"><a href="#L17">17</a></th><td><span class="c"># command-line, it is looked for in the SAF file analysis_name.saf</span></td></tr><tr><th id="L18"><a href="#L18">18</a></th><td></td></tr><tr><th id="L19"><a href="#L19">19</a></th><td><span class="c"># returns the output on the screen and print basic results</span></td></tr><tr><th id="L20"><a href="#L20">20</a></th><td><span class="c"># in the file analysis_name_[run number].out in</span></td></tr><tr><th id="L21"><a href="#L21">21</a></th><td><span class="c"># Output/benchmark_point/</span></td></tr><tr><th id="L22"><a href="#L22">22</a></th><td></td></tr><tr><th id="L23"><a href="#L23">23</a></th><td></td></tr><tr><th id="L24"><a href="#L24">24</a></th><td><span class="c"># path to the directory where the analysis code and output is present</span></td></tr><tr><th id="L25"><a href="#L25">25</a></th><td><span class="c"># (this is the directory created when running MA5 in expert mode,</span></td></tr><tr><th id="L26"><a href="#L26">26</a></th><td><span class="c"># containing the "Build", "Input" and "Output" directories)</span></td></tr><tr><th id="L27"><a href="#L27">27</a></th><td>analysis_path <span class="o">=</span> <span class="s">"./"</span></td></tr><tr><th id="L28"><a href="#L28">28</a></th><td></td></tr><tr><th id="L29"><a href="#L29">29</a></th><td><span class="c"># The number of Poisson distributions we consider (each one effectively being</span></td></tr><tr><th id="L30"><a href="#L30">30</a></th><td><span class="c"># a toy experiment with its own certain prediction for the background):</span></td></tr><tr><th id="L31"><a href="#L31">31</a></th><td>numtoyexperiments <span class="o">=</span> <span class="mi">100000</span></td></tr><tr><th id="L32"><a href="#L32">32</a></th><td></td></tr><tr><th id="L33"><a href="#L33">33</a></th><td><span class="c">#</span></td></tr><tr><th id="L34"><a href="#L34">34</a></th><td><span class="c"># the user is not supposed to modify the code below this line</span></td></tr><tr><th id="L35"><a href="#L35">35</a></th><td><span class="c">#</span></td></tr><tr><th id="L36"><a href="#L36">36</a></th><td></td></tr><tr><th id="L37"><a href="#L37">37</a></th><td><span class="kn">import</span> <span class="nn">os</span><span class="o">,</span> <span class="nn">sys</span></td></tr><tr><th id="L38"><a href="#L38">38</a></th><td><span class="k">try</span><span class="p">:</span></td></tr><tr><th id="L39"><a href="#L39">39</a></th><td>    <span class="kn">from</span> <span class="nn">lxml</span> <span class="kn">import</span> ET</td></tr><tr><th id="L40"><a href="#L40">40</a></th><td><span class="k">except</span><span class="p">:</span></td></tr><tr><th id="L41"><a href="#L41">41</a></th><td>    <span class="kn">import</span> <span class="nn">xml.etree.ElementTree</span> <span class="kn">as</span> <span class="nn">ET</span></td></tr><tr><th id="L42"><a href="#L42">42</a></th><td><span class="kn">import</span> <span class="nn">scipy.stats</span></td></tr><tr><th id="L43"><a href="#L43">43</a></th><td></td></tr><tr><th id="L44"><a href="#L44">44</a></th><td><span class="k">def</span> <span class="nf">usage</span><span class="p">():</span></td></tr><tr><th id="L45"><a href="#L45">45</a></th><td>    <span class="k">print</span> <span class="s">'Usage: ./exclusion_CLs.py analysis_name benchmark_point '</span> <span class="o">+</span> \</td></tr><tr><th id="L46"><a href="#L46">46</a></th><td>      <span class="s">'[run_number] [cross section in pb]'</span></td></tr><tr><th id="L47"><a href="#L47">47</a></th><td>    <span class="k">print</span> <span class="s">'Example: ./exclusion_CLs.py cms_sus_13_011 T2tt_650_50.txt '</span> <span class="o">+</span> \</td></tr><tr><th id="L48"><a href="#L48">48</a></th><td>      <span class="s">'0 0.014'</span></td></tr><tr><th id="L49"><a href="#L49">49</a></th><td>    <span class="k">print</span> <span class="s">'Default value of run number is 0'</span></td></tr><tr><th id="L50"><a href="#L50">50</a></th><td>    <span class="k">print</span> <span class="s">'If the cross section is not given, it is taken from the MA5 output'</span></td></tr><tr><th id="L51"><a href="#L51">51</a></th><td></td></tr><tr><th id="L52"><a href="#L52">52</a></th><td><span class="k">def</span> <span class="nf">listdirectory</span><span class="p">(</span>path<span class="p">):</span></td></tr><tr><th id="L53"><a href="#L53">53</a></th><td>    lfile<span class="o">=</span><span class="p">[]</span></td></tr><tr><th id="L54"><a href="#L54">54</a></th><td>    <span class="k">for</span> root<span class="p">,</span> dirs<span class="p">,</span> files <span class="ow">in</span> os<span class="o">.</span>walk<span class="p">(</span>path<span class="p">):</span> </td></tr><tr><th id="L55"><a href="#L55">55</a></th><td>        <span class="k">for</span> i <span class="ow">in</span> files<span class="p">:</span> </td></tr><tr><th id="L56"><a href="#L56">56</a></th><td>            lfile<span class="o">.</span>append<span class="p">(</span>os<span class="o">.</span>path<span class="o">.</span>join<span class="p">(</span>root<span class="p">,</span> i<span class="p">))</span></td></tr><tr><th id="L57"><a href="#L57">57</a></th><td>    <span class="k">return</span> lfile</td></tr><tr><th id="L58"><a href="#L58">58</a></th><td></td></tr><tr><th id="L59"><a href="#L59">59</a></th><td>bestSR <span class="o">=</span> <span class="s">""</span></td></tr><tr><th id="L60"><a href="#L60">60</a></th><td></td></tr><tr><th id="L61"><a href="#L61">61</a></th><td><span class="k">def</span> <span class="nf">clean_name</span><span class="p">(</span><span class="nb">str</span><span class="p">):</span></td></tr><tr><th id="L62"><a href="#L62">62</a></th><td>    <span class="c"># based on CleanName() from</span></td></tr><tr><th id="L63"><a href="#L63">63</a></th><td>    <span class="c"># ./tools/SampleAnalyzer/Process/Core/SampleAnalyzer.cpp</span></td></tr><tr><th id="L64"><a href="#L64">64</a></th><td>    <span class="c"># in MA5 v1.1.11beta4</span></td></tr><tr><th id="L65"><a href="#L65">65</a></th><td>    <span class="nb">str</span> <span class="o">=</span> <span class="nb">str</span><span class="o">.</span>replace<span class="p">(</span><span class="s">"/"</span><span class="p">,</span>  <span class="s">"_slash_"</span><span class="p">)</span></td></tr><tr><th id="L66"><a href="#L66">66</a></th><td>    <span class="nb">str</span> <span class="o">=</span> <span class="nb">str</span><span class="o">.</span>replace<span class="p">(</span><span class="s">"-&gt;"</span><span class="p">,</span> <span class="s">"_to_"</span><span class="p">)</span></td></tr><tr><th id="L67"><a href="#L67">67</a></th><td>    <span class="nb">str</span> <span class="o">=</span> <span class="nb">str</span><span class="o">.</span>replace<span class="p">(</span><span class="s">"&gt;="</span><span class="p">,</span> <span class="s">"_greater_than_or_equal_to_"</span><span class="p">)</span></td></tr><tr><th id="L68"><a href="#L68">68</a></th><td>    <span class="nb">str</span> <span class="o">=</span> <span class="nb">str</span><span class="o">.</span>replace<span class="p">(</span><span class="s">"&gt;"</span><span class="p">,</span>  <span class="s">"_greater_than_"</span><span class="p">)</span></td></tr><tr><th id="L69"><a href="#L69">69</a></th><td>    <span class="nb">str</span> <span class="o">=</span> <span class="nb">str</span><span class="o">.</span>replace<span class="p">(</span><span class="s">"&lt;="</span><span class="p">,</span> <span class="s">"_smaller_than_or_equal_to_"</span><span class="p">)</span></td></tr><tr><th id="L70"><a href="#L70">70</a></th><td>    <span class="nb">str</span> <span class="o">=</span> <span class="nb">str</span><span class="o">.</span>replace<span class="p">(</span><span class="s">"&lt;"</span><span class="p">,</span>  <span class="s">"_smaller_than_"</span><span class="p">)</span></td></tr><tr><th id="L71"><a href="#L71">71</a></th><td>    <span class="nb">str</span> <span class="o">=</span> <span class="nb">str</span><span class="o">.</span>replace<span class="p">(</span><span class="s">" "</span><span class="p">,</span>  <span class="s">"_"</span><span class="p">)</span></td></tr><tr><th id="L72"><a href="#L72">72</a></th><td>    <span class="nb">str</span> <span class="o">=</span> <span class="nb">str</span><span class="o">.</span>replace<span class="p">(</span><span class="s">","</span><span class="p">,</span>  <span class="s">"_"</span><span class="p">)</span></td></tr><tr><th id="L73"><a href="#L73">73</a></th><td>    <span class="nb">str</span> <span class="o">=</span> <span class="nb">str</span><span class="o">.</span>replace<span class="p">(</span><span class="s">"+"</span><span class="p">,</span>  <span class="s">"_"</span><span class="p">)</span></td></tr><tr><th id="L74"><a href="#L74">74</a></th><td>    <span class="nb">str</span> <span class="o">=</span> <span class="nb">str</span><span class="o">.</span>replace<span class="p">(</span><span class="s">"-"</span><span class="p">,</span>  <span class="s">"_"</span><span class="p">)</span></td></tr><tr><th id="L75"><a href="#L75">75</a></th><td>    <span class="nb">str</span> <span class="o">=</span> <span class="nb">str</span><span class="o">.</span>replace<span class="p">(</span><span class="s">"("</span><span class="p">,</span>  <span class="s">"_lp_"</span><span class="p">)</span></td></tr><tr><th id="L76"><a href="#L76">76</a></th><td>    <span class="nb">str</span> <span class="o">=</span> <span class="nb">str</span><span class="o">.</span>replace<span class="p">(</span><span class="s">")"</span><span class="p">,</span>  <span class="s">"_rp_"</span><span class="p">)</span></td></tr><tr><th id="L77"><a href="#L77">77</a></th><td>    <span class="k">return</span> <span class="nb">str</span></td></tr><tr><th id="L78"><a href="#L78">78</a></th><td></td></tr><tr><th id="L79"><a href="#L79">79</a></th><td><span class="k">def</span> <span class="nf">CLs</span><span class="p">(</span>NumObserved<span class="p">,</span> ExpectedBG<span class="p">,</span> BGError<span class="p">,</span> SigHypothesis<span class="p">,</span> NumToyExperiments<span class="p">):</span></td></tr><tr><th id="L80"><a href="#L80">80</a></th><td>    <span class="c"># generate a set of expected-number-of-background-events, one for each toy</span></td></tr><tr><th id="L81"><a href="#L81">81</a></th><td>    <span class="c"># experiment, distributed according to a Gaussian with the specified mean</span></td></tr><tr><th id="L82"><a href="#L82">82</a></th><td>    <span class="c"># and uncertainty</span></td></tr><tr><th id="L83"><a href="#L83">83</a></th><td>    ExpectedBGs <span class="o">=</span> scipy<span class="o">.</span>stats<span class="o">.</span>norm<span class="o">.</span>rvs<span class="p">(</span>loc<span class="o">=</span>ExpectedBG<span class="p">,</span> \</td></tr><tr><th id="L84"><a href="#L84">84</a></th><td>    scale<span class="o">=</span>BGError<span class="p">,</span> size<span class="o">=</span>NumToyExperiments<span class="p">)</span></td></tr><tr><th id="L85"><a href="#L85">85</a></th><td></td></tr><tr><th id="L86"><a href="#L86">86</a></th><td>    <span class="c"># Ignore values in the tail of the Gaussian extending to negative numbers</span></td></tr><tr><th id="L87"><a href="#L87">87</a></th><td>    ExpectedBGs <span class="o">=</span> <span class="p">[</span>value <span class="k">for</span> value <span class="ow">in</span> ExpectedBGs <span class="k">if</span> value <span class="o">&gt;</span> <span class="mi">0</span><span class="p">]</span></td></tr><tr><th id="L88"><a href="#L88">88</a></th><td></td></tr><tr><th id="L89"><a href="#L89">89</a></th><td>    <span class="c"># For each toy experiment, get the actual number of background events by</span></td></tr><tr><th id="L90"><a href="#L90">90</a></th><td>    <span class="c"># taking one value from a Poisson distribution created using the expected</span></td></tr><tr><th id="L91"><a href="#L91">91</a></th><td>    <span class="c"># number of events.</span></td></tr><tr><th id="L92"><a href="#L92">92</a></th><td>    ToyBGs <span class="o">=</span> scipy<span class="o">.</span>stats<span class="o">.</span>poisson<span class="o">.</span>rvs<span class="p">(</span>ExpectedBGs<span class="p">)</span></td></tr><tr><th id="L93"><a href="#L93">93</a></th><td>    ToyBGs <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">float</span><span class="p">,</span> ToyBGs<span class="p">)</span></td></tr><tr><th id="L94"><a href="#L94">94</a></th><td></td></tr><tr><th id="L95"><a href="#L95">95</a></th><td>    <span class="c"># The probability for the background alone to fluctutate as LOW as</span></td></tr><tr><th id="L96"><a href="#L96">96</a></th><td>    <span class="c"># observed = the fraction of the toy experiments with backgrounds as low as</span></td></tr><tr><th id="L97"><a href="#L97">97</a></th><td>    <span class="c"># observed = p_b.</span></td></tr><tr><th id="L98"><a href="#L98">98</a></th><td>    <span class="c"># NB (1 - this p_b) corresponds to what is usually called p_b for CLs.</span></td></tr><tr><th id="L99"><a href="#L99">99</a></th><td>    p_b <span class="o">=</span> scipy<span class="o">.</span>stats<span class="o">.</span>percentileofscore<span class="p">(</span>ToyBGs<span class="p">,</span> NumObserved<span class="p">,</span> kind<span class="o">=</span><span class="s">'weak'</span><span class="p">)</span><span class="o">*.</span><span class="mo">01</span></td></tr><tr><th id="L100"><a href="#L100">100</a></th><td></td></tr><tr><th id="L101"><a href="#L101">101</a></th><td>    <span class="c"># Toy MC for background+signal</span></td></tr><tr><th id="L102"><a href="#L102">102</a></th><td>    ExpectedBGandS <span class="o">=</span> <span class="p">[</span>expectedbg <span class="o">+</span> SigHypothesis <span class="k">for</span> expectedbg <span class="ow">in</span> ExpectedBGs<span class="p">]</span></td></tr><tr><th id="L103"><a href="#L103">103</a></th><td>    ToyBplusS <span class="o">=</span> scipy<span class="o">.</span>stats<span class="o">.</span>poisson<span class="o">.</span>rvs<span class="p">(</span>ExpectedBGandS<span class="p">)</span></td></tr><tr><th id="L104"><a href="#L104">104</a></th><td>    ToyBplusS <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">float</span><span class="p">,</span> ToyBplusS<span class="p">)</span></td></tr><tr><th id="L105"><a href="#L105">105</a></th><td></td></tr><tr><th id="L106"><a href="#L106">106</a></th><td>    <span class="c"># Calculate the fraction of these that are &gt;= the number observed,</span></td></tr><tr><th id="L107"><a href="#L107">107</a></th><td>    <span class="c"># giving p_(S+B). Divide by (1 - p_b) a la the CLs prescription.</span></td></tr><tr><th id="L108"><a href="#L108">108</a></th><td>    p_SplusB <span class="o">=</span> scipy<span class="o">.</span>stats<span class="o">.</span>percentileofscore<span class="p">(</span>ToyBplusS<span class="p">,</span> NumObserved<span class="p">,</span> kind<span class="o">=</span><span class="s">'weak'</span><span class="p">)</span><span class="o">*.</span><span class="mo">01</span></td></tr><tr><th id="L109"><a href="#L109">109</a></th><td>    </td></tr><tr><th id="L110"><a href="#L110">110</a></th><td>    <span class="k">return</span> <span class="mf">1.</span><span class="o">-</span><span class="p">(</span>p_SplusB <span class="o">/</span> p_b<span class="p">)</span> <span class="c"># 1 - CLs</span></td></tr><tr><th id="L111"><a href="#L111">111</a></th><td></td></tr><tr><th id="L112"><a href="#L112">112</a></th><td><span class="k">def</span> <span class="nf">exclusion_check</span><span class="p">(</span>crosssection<span class="p">):</span></td></tr><tr><th id="L113"><a href="#L113">113</a></th><td>    <span class="k">global</span> bestSR</td></tr><tr><th id="L114"><a href="#L114">114</a></th><td></td></tr><tr><th id="L115"><a href="#L115">115</a></th><td>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span>signalregions<span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span></td></tr><tr><th id="L116"><a href="#L116">116</a></th><td>        <span class="c"># if more than one signal region, decide which signal regions</span></td></tr><tr><th id="L117"><a href="#L117">117</a></th><td>        <span class="c"># yields the best expected limit</span></td></tr><tr><th id="L118"><a href="#L118">118</a></th><td>        limit <span class="o">=</span> <span class="o">-</span><span class="mf">1.</span></td></tr><tr><th id="L119"><a href="#L119">119</a></th><td>        <span class="k">for</span> SR <span class="ow">in</span> signalregions<span class="p">:</span></td></tr><tr><th id="L120"><a href="#L120">120</a></th><td>            nsignal <span class="o">=</span> crosssection <span class="o">*</span> lumi <span class="o">*</span> <span class="mf">1000.</span> <span class="o">*</span> signalregions<span class="p">[</span>SR<span class="p">][</span><span class="s">"acceff"</span><span class="p">]</span></td></tr><tr><th id="L121"><a href="#L121">121</a></th><td>            nb <span class="o">=</span> signalregions<span class="p">[</span>SR<span class="p">][</span><span class="s">"nb"</span><span class="p">]</span></td></tr><tr><th id="L122"><a href="#L122">122</a></th><td>            deltanb <span class="o">=</span> signalregions<span class="p">[</span>SR<span class="p">][</span><span class="s">"deltanb"</span><span class="p">]</span></td></tr><tr><th id="L123"><a href="#L123">123</a></th><td></td></tr><tr><th id="L124"><a href="#L124">124</a></th><td>            limitSR <span class="o">=</span> CLs<span class="p">(</span>nb<span class="p">,</span> nb<span class="p">,</span> deltanb<span class="p">,</span> nsignal<span class="p">,</span> numtoyexperiments<span class="p">)</span></td></tr><tr><th id="L125"><a href="#L125">125</a></th><td>            <span class="k">if</span> limitSR <span class="o">&gt;</span> limit<span class="p">:</span></td></tr><tr><th id="L126"><a href="#L126">126</a></th><td>                bestSR <span class="o">=</span> SR</td></tr><tr><th id="L127"><a href="#L127">127</a></th><td>                limit <span class="o">=</span> limitSR</td></tr><tr><th id="L128"><a href="#L128">128</a></th><td>    <span class="k">else</span><span class="p">:</span></td></tr><tr><th id="L129"><a href="#L129">129</a></th><td>        bestSR <span class="o">=</span> signalregions<span class="o">.</span>keys<span class="p">()[</span><span class="mi">0</span><span class="p">]</span></td></tr><tr><th id="L130"><a href="#L130">130</a></th><td></td></tr><tr><th id="L131"><a href="#L131">131</a></th><td>    nsignal <span class="o">=</span> crosssection <span class="o">*</span> lumi <span class="o">*</span> <span class="mf">1000.</span> <span class="o">*</span> signalregions<span class="p">[</span>bestSR<span class="p">][</span><span class="s">"acceff"</span><span class="p">]</span></td></tr><tr><th id="L132"><a href="#L132">132</a></th><td>    nobs <span class="o">=</span> <span class="nb">int</span><span class="p">(</span>signalregions<span class="p">[</span>bestSR<span class="p">][</span><span class="s">"nobs"</span><span class="p">])</span></td></tr><tr><th id="L133"><a href="#L133">133</a></th><td>    nb <span class="o">=</span> signalregions<span class="p">[</span>bestSR<span class="p">][</span><span class="s">"nb"</span><span class="p">]</span></td></tr><tr><th id="L134"><a href="#L134">134</a></th><td>    deltanb <span class="o">=</span> signalregions<span class="p">[</span>bestSR<span class="p">][</span><span class="s">"deltanb"</span><span class="p">]</span></td></tr><tr><th id="L135"><a href="#L135">135</a></th><td></td></tr><tr><th id="L136"><a href="#L136">136</a></th><td>    <span class="k">print</span> <span class="s">'The best expected signal region is "'</span> <span class="o">+</span> bestSR <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L137"><a href="#L137">137</a></th><td>    <span class="k">print</span> <span class="s">'It has: nobs = '</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span>nobs<span class="p">)</span> <span class="o">+</span> <span class="s">', nb = '</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span>nb<span class="p">)</span> <span class="o">+</span> <span class="s">' \pm '</span> <span class="o">+</span> \</td></tr><tr><th id="L138"><a href="#L138">138</a></th><td>      <span class="nb">str</span><span class="p">(</span>deltanb<span class="p">)</span> <span class="o">+</span> <span class="s">', nsignal = '</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="nb">round</span><span class="p">(</span>nsignal<span class="p">,</span><span class="mi">2</span><span class="p">))</span> <span class="o">+</span> <span class="s">'.'</span></td></tr><tr><th id="L139"><a href="#L139">139</a></th><td></td></tr><tr><th id="L140"><a href="#L140">140</a></th><td>    <span class="k">return</span> CLs<span class="p">(</span>nobs<span class="p">,</span> nb<span class="p">,</span> deltanb<span class="p">,</span> nsignal<span class="p">,</span> numtoyexperiments<span class="p">)</span></td></tr><tr><th id="L141"><a href="#L141">141</a></th><td></td></tr><tr><th id="L142"><a href="#L142">142</a></th><td><span class="k">def</span> <span class="nf">exclusion_check95</span><span class="p">(</span>crosssection<span class="p">):</span></td></tr><tr><th id="L143"><a href="#L143">143</a></th><td>    <span class="k">return</span> exclusion_check<span class="p">(</span>crosssection<span class="p">)</span><span class="o">-</span><span class="mf">0.95</span></td></tr><tr><th id="L144"><a href="#L144">144</a></th><td></td></tr><tr><th id="L145"><a href="#L145">145</a></th><td><span class="k">if</span> analysis_path<span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s">"/"</span><span class="p">:</span></td></tr><tr><th id="L146"><a href="#L146">146</a></th><td>    analysis_path <span class="o">=</span> analysis_path<span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span></td></tr><tr><th id="L147"><a href="#L147">147</a></th><td></td></tr><tr><th id="L148"><a href="#L148">148</a></th><td><span class="c"># at least one argument, check if asking for help</span></td></tr><tr><th id="L149"><a href="#L149">149</a></th><td><span class="k">if</span> <span class="nb">len</span><span class="p">(</span>sys<span class="o">.</span>argv<span class="p">)</span> <span class="o">&lt;</span> <span class="mi">3</span> <span class="ow">or</span> <span class="p">(</span>sys<span class="o">.</span>argv<span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s">"-h"</span> <span class="ow">or</span> sys<span class="o">.</span>argv<span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s">"--help"</span><span class="p">):</span></td></tr><tr><th id="L150"><a href="#L150">150</a></th><td>    usage<span class="p">()</span></td></tr><tr><th id="L151"><a href="#L151">151</a></th><td>    sys<span class="o">.</span>exit<span class="p">()</span></td></tr><tr><th id="L152"><a href="#L152">152</a></th><td></td></tr><tr><th id="L153"><a href="#L153">153</a></th><td>analysis_name <span class="o">=</span> sys<span class="o">.</span>argv<span class="p">[</span><span class="mi">1</span><span class="p">]</span></td></tr><tr><th id="L154"><a href="#L154">154</a></th><td>bench_name <span class="o">=</span> sys<span class="o">.</span>argv<span class="p">[</span><span class="mi">2</span><span class="p">]</span></td></tr><tr><th id="L155"><a href="#L155">155</a></th><td><span class="k">if</span> <span class="nb">len</span><span class="p">(</span>sys<span class="o">.</span>argv<span class="p">)</span> <span class="o">&gt;</span> <span class="mi">3</span><span class="p">:</span></td></tr><tr><th id="L156"><a href="#L156">156</a></th><td>    run_number <span class="o">=</span> sys<span class="o">.</span>argv<span class="p">[</span><span class="mi">3</span><span class="p">]</span></td></tr><tr><th id="L157"><a href="#L157">157</a></th><td><span class="k">else</span><span class="p">:</span></td></tr><tr><th id="L158"><a href="#L158">158</a></th><td>    run_number <span class="o">=</span> <span class="s">"0"</span></td></tr><tr><th id="L159"><a href="#L159">159</a></th><td><span class="k">if</span> <span class="nb">len</span><span class="p">(</span>sys<span class="o">.</span>argv<span class="p">)</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="p">:</span></td></tr><tr><th id="L160"><a href="#L160">160</a></th><td>    <span class="k">try</span><span class="p">:</span></td></tr><tr><th id="L161"><a href="#L161">161</a></th><td>        xsection <span class="o">=</span> <span class="nb">float</span><span class="p">(</span>sys<span class="o">.</span>argv<span class="p">[</span><span class="mi">4</span><span class="p">])</span></td></tr><tr><th id="L162"><a href="#L162">162</a></th><td>    <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span></td></tr><tr><th id="L163"><a href="#L163">163</a></th><td>        <span class="k">print</span> <span class="s">'Invalid cross section given as command-line argument: "'</span> <span class="o">+</span> \</td></tr><tr><th id="L164"><a href="#L164">164</a></th><td>          sys<span class="o">.</span>argv<span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L165"><a href="#L165">165</a></th><td>        sys<span class="o">.</span>exit<span class="p">()</span></td></tr><tr><th id="L166"><a href="#L166">166</a></th><td><span class="k">else</span><span class="p">:</span></td></tr><tr><th id="L167"><a href="#L167">167</a></th><td>    xsection <span class="o">=</span> <span class="mi">0</span></td></tr><tr><th id="L168"><a href="#L168">168</a></th><td></td></tr><tr><th id="L169"><a href="#L169">169</a></th><td></td></tr><tr><th id="L170"><a href="#L170">170</a></th><td></td></tr><tr><th id="L171"><a href="#L171">171</a></th><td><span class="c">######################################</span></td></tr><tr><th id="L172"><a href="#L172">172</a></th><td><span class="c"># first, read the XML .info file</span></td></tr><tr><th id="L173"><a href="#L173">173</a></th><td><span class="c"># and fill the variable lumi</span></td></tr><tr><th id="L174"><a href="#L174">174</a></th><td><span class="c"># and the dictionary signalregions</span></td></tr><tr><th id="L175"><a href="#L175">175</a></th><td><span class="c">######################################</span></td></tr><tr><th id="L176"><a href="#L176">176</a></th><td></td></tr><tr><th id="L177"><a href="#L177">177</a></th><td>lumi <span class="o">=</span> <span class="mi">0</span> <span class="c"># integrated luminosity, in fb^-1</span></td></tr><tr><th id="L178"><a href="#L178">178</a></th><td>signalregions <span class="o">=</span> <span class="p">{}</span></td></tr><tr><th id="L179"><a href="#L179">179</a></th><td></td></tr><tr><th id="L180"><a href="#L180">180</a></th><td>analysisinfo_path <span class="o">=</span> analysis_path <span class="o">+</span> <span class="s">"/Build/SampleAnalyzer/User/Analyzer/"</span> <span class="o">+</span> \</td></tr><tr><th id="L181"><a href="#L181">181</a></th><td>    analysis_name <span class="o">+</span> <span class="s">".info"</span></td></tr><tr><th id="L182"><a href="#L182">182</a></th><td></td></tr><tr><th id="L183"><a href="#L183">183</a></th><td><span class="k">try</span><span class="p">:</span></td></tr><tr><th id="L184"><a href="#L184">184</a></th><td>    info_input <span class="o">=</span> <span class="nb">open</span><span class="p">(</span>analysisinfo_path<span class="p">)</span></td></tr><tr><th id="L185"><a href="#L185">185</a></th><td><span class="k">except</span> <span class="ne">IOError</span> <span class="k">as</span> e<span class="p">:</span></td></tr><tr><th id="L186"><a href="#L186">186</a></th><td>    <span class="k">print</span> <span class="s">'I/O error({0}): {1}'</span><span class="o">.</span>format<span class="p">(</span>e<span class="o">.</span>errno<span class="p">,</span> e<span class="o">.</span>strerror<span class="p">)</span></td></tr><tr><th id="L187"><a href="#L187">187</a></th><td>    <span class="k">print</span> <span class="s">'Cannot open the XML info file "'</span> <span class="o">+</span> analysisinfo_path <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L188"><a href="#L188">188</a></th><td>    sys<span class="o">.</span>exit<span class="p">()</span></td></tr><tr><th id="L189"><a href="#L189">189</a></th><td></td></tr><tr><th id="L190"><a href="#L190">190</a></th><td>info_tree <span class="o">=</span> ET<span class="o">.</span>parse<span class="p">(</span>info_input<span class="p">)</span></td></tr><tr><th id="L191"><a href="#L191">191</a></th><td>info_input<span class="o">.</span>close<span class="p">()</span></td></tr><tr><th id="L192"><a href="#L192">192</a></th><td></td></tr><tr><th id="L193"><a href="#L193">193</a></th><td>info_root <span class="o">=</span> info_tree<span class="o">.</span>getroot<span class="p">()</span></td></tr><tr><th id="L194"><a href="#L194">194</a></th><td><span class="k">if</span> info_root<span class="o">.</span>tag <span class="o">!=</span> <span class="s">"analysis"</span><span class="p">:</span></td></tr><tr><th id="L195"><a href="#L195">195</a></th><td>    <span class="k">print</span> <span class="s">'Invalid XML info file "'</span> <span class="o">+</span> analysisinfo_path <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L196"><a href="#L196">196</a></th><td>    <span class="k">print</span> <span class="s">'Root tag should be &lt;analysis&gt;, not &lt;'</span> <span class="o">+</span> info_root<span class="o">.</span>tag <span class="o">+</span> <span class="s">'&gt;.'</span></td></tr><tr><th id="L197"><a href="#L197">197</a></th><td>    sys<span class="o">.</span>exit<span class="p">()</span></td></tr><tr><th id="L198"><a href="#L198">198</a></th><td><span class="k">if</span> info_root<span class="o">.</span>attrib<span class="p">[</span><span class="s">"id"</span><span class="p">]</span> <span class="o">!=</span> analysis_name<span class="p">:</span></td></tr><tr><th id="L199"><a href="#L199">199</a></th><td>    <span class="k">print</span> <span class="s">'Invalid XML info file "'</span> <span class="o">+</span> analysisinfo_path <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L200"><a href="#L200">200</a></th><td>    <span class="k">print</span> <span class="s">'Analysis id in root tag &lt;analysis&gt; should be "'</span> <span class="o">+</span> analysis_name <span class="o">+</span> \</td></tr><tr><th id="L201"><a href="#L201">201</a></th><td>          <span class="s">'", not "'</span> <span class="o">+</span> info_root<span class="o">.</span>attrib<span class="p">[</span><span class="s">"id"</span><span class="p">]</span> <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L202"><a href="#L202">202</a></th><td>    sys<span class="o">.</span>exit<span class="p">()</span></td></tr><tr><th id="L203"><a href="#L203">203</a></th><td></td></tr><tr><th id="L204"><a href="#L204">204</a></th><td></td></tr><tr><th id="L205"><a href="#L205">205</a></th><td><span class="k">for</span> child <span class="ow">in</span> info_root<span class="p">:</span></td></tr><tr><th id="L206"><a href="#L206">206</a></th><td>    <span class="c"># for &lt;lumi&gt; tag</span></td></tr><tr><th id="L207"><a href="#L207">207</a></th><td>    <span class="k">if</span> child<span class="o">.</span>tag <span class="o">==</span> <span class="s">"lumi"</span><span class="p">:</span></td></tr><tr><th id="L208"><a href="#L208">208</a></th><td>        <span class="k">if</span> lumi <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span></td></tr><tr><th id="L209"><a href="#L209">209</a></th><td>            <span class="k">print</span> <span class="s">'Warning: redefinition of the luminosity in the '</span> <span class="o">+</span> \</td></tr><tr><th id="L210"><a href="#L210">210</a></th><td>              <span class="s">'XML info file "'</span> <span class="o">+</span> analysisinfo_path <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L211"><a href="#L211">211</a></th><td></td></tr><tr><th id="L212"><a href="#L212">212</a></th><td>        <span class="k">try</span><span class="p">:</span></td></tr><tr><th id="L213"><a href="#L213">213</a></th><td>            lumi <span class="o">=</span> <span class="nb">float</span><span class="p">(</span>child<span class="o">.</span>text<span class="p">)</span></td></tr><tr><th id="L214"><a href="#L214">214</a></th><td>        <span class="k">except</span> <span class="ne">TypeError</span><span class="p">:</span> <span class="c"># empty tag is of type NULL</span></td></tr><tr><th id="L215"><a href="#L215">215</a></th><td>            lumi <span class="o">=</span> <span class="mi">0</span></td></tr><tr><th id="L216"><a href="#L216">216</a></th><td>        <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span></td></tr><tr><th id="L217"><a href="#L217">217</a></th><td>            <span class="k">print</span> <span class="s">'Invalid XML info file "'</span> <span class="o">+</span> analysisinfo_path <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L218"><a href="#L218">218</a></th><td>            <span class="k">print</span> <span class="s">'The value of the &lt;lumi&gt; tag is not a number.'</span></td></tr><tr><th id="L219"><a href="#L219">219</a></th><td>            sys<span class="o">.</span>exit<span class="p">()</span></td></tr><tr><th id="L220"><a href="#L220">220</a></th><td></td></tr><tr><th id="L221"><a href="#L221">221</a></th><td>    <span class="c"># for the &lt;region&gt; tags</span></td></tr><tr><th id="L222"><a href="#L222">222</a></th><td>    <span class="c"># if no type is specified, assumed to be a signal region</span></td></tr><tr><th id="L223"><a href="#L223">223</a></th><td>    <span class="k">if</span> child<span class="o">.</span>tag <span class="o">==</span> <span class="s">"region"</span> <span class="ow">and</span> \</td></tr><tr><th id="L224"><a href="#L224">224</a></th><td>      <span class="p">(</span><span class="s">"type"</span> <span class="ow">not</span> <span class="ow">in</span> child<span class="o">.</span>attrib <span class="ow">or</span> child<span class="o">.</span>attrib<span class="p">[</span><span class="s">"type"</span><span class="p">]</span> <span class="o">==</span> <span class="s">"signal"</span><span class="p">):</span></td></tr><tr><th id="L225"><a href="#L225">225</a></th><td>        <span class="k">if</span> <span class="s">"id"</span> <span class="ow">not</span> <span class="ow">in</span> child<span class="o">.</span>attrib<span class="p">:</span></td></tr><tr><th id="L226"><a href="#L226">226</a></th><td>            <span class="k">print</span> <span class="s">'Invalid XML info file "'</span> <span class="o">+</span> analysisinfo_path <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L227"><a href="#L227">227</a></th><td>            <span class="k">print</span> <span class="s">'Presence of &lt;region&gt; tags with no id attribute.'</span></td></tr><tr><th id="L228"><a href="#L228">228</a></th><td>            sys<span class="o">.</span>exit<span class="p">()</span></td></tr><tr><th id="L229"><a href="#L229">229</a></th><td></td></tr><tr><th id="L230"><a href="#L230">230</a></th><td>        regionid <span class="o">=</span> child<span class="o">.</span>attrib<span class="p">[</span><span class="s">"id"</span><span class="p">]</span></td></tr><tr><th id="L231"><a href="#L231">231</a></th><td></td></tr><tr><th id="L232"><a href="#L232">232</a></th><td>        <span class="k">if</span> regionid <span class="ow">in</span> signalregions<span class="p">:</span></td></tr><tr><th id="L233"><a href="#L233">233</a></th><td>            <span class="c"># a &lt;region&gt; tag with the same id has already been defined</span></td></tr><tr><th id="L234"><a href="#L234">234</a></th><td>            <span class="k">print</span> <span class="s">'Invalid XML info file "'</span> <span class="o">+</span> analysisinfo_path <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L235"><a href="#L235">235</a></th><td>            <span class="k">print</span> <span class="s">'A region with id="'</span> <span class="o">+</span> regionid <span class="o">+</span> <span class="s">' is defined '</span> <span class="o">+</span> \</td></tr><tr><th id="L236"><a href="#L236">236</a></th><td>              <span class="s">'multiple times.'</span></td></tr><tr><th id="L237"><a href="#L237">237</a></th><td>            sys<span class="o">.</span>exit<span class="p">()</span></td></tr><tr><th id="L238"><a href="#L238">238</a></th><td></td></tr><tr><th id="L239"><a href="#L239">239</a></th><td>        signalregions<span class="p">[</span>regionid<span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="s">"acceff"</span><span class="p">:</span> <span class="mi">0</span><span class="p">}</span> <span class="c"># initialize efficiency to 0</span></td></tr><tr><th id="L240"><a href="#L240">240</a></th><td>        <span class="k">for</span> rchild <span class="ow">in</span> child<span class="p">:</span></td></tr><tr><th id="L241"><a href="#L241">241</a></th><td>            <span class="k">if</span> rchild<span class="o">.</span>tag <span class="ow">in</span> <span class="p">[</span><span class="s">"nobs"</span><span class="p">,</span> <span class="s">"nb"</span><span class="p">,</span> <span class="s">"deltanb"</span><span class="p">]:</span></td></tr><tr><th id="L242"><a href="#L242">242</a></th><td>                ntag <span class="o">=</span> rchild<span class="o">.</span>tag</td></tr><tr><th id="L243"><a href="#L243">243</a></th><td>                <span class="k">if</span> ntag <span class="ow">in</span> signalregions<span class="p">[</span>regionid<span class="p">]:</span></td></tr><tr><th id="L244"><a href="#L244">244</a></th><td>                    <span class="k">print</span> <span class="s">'Warning: redefinition of &lt;'</span> <span class="o">+</span> ntag <span class="o">+</span> <span class="s">'&gt; in the '</span> <span class="o">+</span> \</td></tr><tr><th id="L245"><a href="#L245">245</a></th><td>                      <span class="s">'region "'</span> <span class="o">+</span> \</td></tr><tr><th id="L246"><a href="#L246">246</a></th><td>                      regionid <span class="o">+</span> <span class="s">'" of the XML info file "'</span> <span class="o">+</span> \</td></tr><tr><th id="L247"><a href="#L247">247</a></th><td>                      analysisinfo_path <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L248"><a href="#L248">248</a></th><td></td></tr><tr><th id="L249"><a href="#L249">249</a></th><td>                <span class="k">try</span><span class="p">:</span></td></tr><tr><th id="L250"><a href="#L250">250</a></th><td>                    signalregions<span class="p">[</span>regionid<span class="p">][</span>ntag<span class="p">]</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span>rchild<span class="o">.</span>text<span class="p">)</span></td></tr><tr><th id="L251"><a href="#L251">251</a></th><td>                <span class="k">except</span> <span class="ne">TypeError</span><span class="p">:</span> <span class="c"># empty tag is of type NULL</span></td></tr><tr><th id="L252"><a href="#L252">252</a></th><td>                    signalregions<span class="p">[</span>regionid<span class="p">][</span>ntag<span class="p">]</span> <span class="o">=</span> <span class="mi">0</span></td></tr><tr><th id="L253"><a href="#L253">253</a></th><td>                <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span></td></tr><tr><th id="L254"><a href="#L254">254</a></th><td>                    <span class="k">print</span> <span class="s">'Invalid XML info file "'</span> <span class="o">+</span> analysisinfo_path <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L255"><a href="#L255">255</a></th><td>                    <span class="k">print</span> <span class="s">'The value of the &lt;'</span> <span class="o">+</span> ntag <span class="o">+</span> <span class="s">'&gt; tag in region "'</span> <span class="o">+</span> \</td></tr><tr><th id="L256"><a href="#L256">256</a></th><td>                     regionid <span class="o">+</span> <span class="s">'" is not a number.'</span></td></tr><tr><th id="L257"><a href="#L257">257</a></th><td>                    sys<span class="o">.</span>exit<span class="p">()</span></td></tr><tr><th id="L258"><a href="#L258">258</a></th><td></td></tr><tr><th id="L259"><a href="#L259">259</a></th><td><span class="c">######################################</span></td></tr><tr><th id="L260"><a href="#L260">260</a></th><td><span class="c"># then, read the SAF files</span></td></tr><tr><th id="L261"><a href="#L261">261</a></th><td><span class="c"># for the cutflows</span></td></tr><tr><th id="L262"><a href="#L262">262</a></th><td><span class="c"># generated by MA5</span></td></tr><tr><th id="L263"><a href="#L263">263</a></th><td><span class="c">######################################</span></td></tr><tr><th id="L264"><a href="#L264">264</a></th><td></td></tr><tr><th id="L265"><a href="#L265">265</a></th><td>analysisinfo_path <span class="o">=</span> analysis_path <span class="o">+</span> <span class="s">"/Output/"</span> <span class="o">+</span> \</td></tr><tr><th id="L266"><a href="#L266">266</a></th><td>    bench_name <span class="o">+</span> <span class="s">"/"</span> <span class="o">+</span> analysis_name <span class="o">+</span> <span class="s">"_"</span> <span class="o">+</span> run_number <span class="o">+</span> <span class="s">"/Cutflows"</span></td></tr><tr><th id="L267"><a href="#L267">267</a></th><td></td></tr><tr><th id="L268"><a href="#L268">268</a></th><td>listdir <span class="o">=</span> listdirectory<span class="p">(</span>analysisinfo_path<span class="p">)</span></td></tr><tr><th id="L269"><a href="#L269">269</a></th><td></td></tr><tr><th id="L270"><a href="#L270">270</a></th><td><span class="k">if</span> <span class="ow">not</span> listdir<span class="p">:</span></td></tr><tr><th id="L271"><a href="#L271">271</a></th><td>    <span class="k">print</span> <span class="s">'The directory "'</span> <span class="o">+</span> analysisinfo_path <span class="o">+</span> <span class="s">'" containing the SAF'</span> <span class="o">+</span> \</td></tr><tr><th id="L272"><a href="#L272">272</a></th><td>      <span class="s">' files for the cutflows cannot be listed.'</span></td></tr><tr><th id="L273"><a href="#L273">273</a></th><td>    sys<span class="o">.</span>exit<span class="p">()</span></td></tr><tr><th id="L274"><a href="#L274">274</a></th><td></td></tr><tr><th id="L275"><a href="#L275">275</a></th><td><span class="k">for</span> <span class="nb">file</span> <span class="ow">in</span> listdir<span class="p">:</span></td></tr><tr><th id="L276"><a href="#L276">276</a></th><td>    <span class="c"># signal region (as defined in the XML info file)</span></td></tr><tr><th id="L277"><a href="#L277">277</a></th><td>    <span class="c"># associated with the cutflow file</span></td></tr><tr><th id="L278"><a href="#L278">278</a></th><td>    assoc_SR <span class="o">=</span> <span class="s">""</span></td></tr><tr><th id="L279"><a href="#L279">279</a></th><td></td></tr><tr><th id="L280"><a href="#L280">280</a></th><td>    <span class="k">if</span> <span class="nb">file</span><span class="p">[</span><span class="o">-</span><span class="mi">4</span><span class="p">:]</span> <span class="o">!=</span> <span class="s">".saf"</span><span class="p">:</span></td></tr><tr><th id="L281"><a href="#L281">281</a></th><td>        <span class="k">continue</span></td></tr><tr><th id="L282"><a href="#L282">282</a></th><td>    SRname <span class="o">=</span> <span class="nb">file</span><span class="o">.</span>split<span class="p">(</span><span class="s">"/"</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">][:</span><span class="o">-</span><span class="mi">4</span><span class="p">]</span></td></tr><tr><th id="L283"><a href="#L283">283</a></th><td></td></tr><tr><th id="L284"><a href="#L284">284</a></th><td>    <span class="k">for</span> regionid <span class="ow">in</span> signalregions<span class="p">:</span></td></tr><tr><th id="L285"><a href="#L285">285</a></th><td>        <span class="k">for</span> sr <span class="ow">in</span> regionid<span class="o">.</span>split<span class="p">(</span><span class="s">";"</span><span class="p">):</span></td></tr><tr><th id="L286"><a href="#L286">286</a></th><td>            <span class="k">if</span> clean_name<span class="p">(</span>sr<span class="p">)</span> <span class="o">==</span> SRname<span class="p">:</span></td></tr><tr><th id="L287"><a href="#L287">287</a></th><td>                assoc_SR <span class="o">=</span> sr</td></tr><tr><th id="L288"><a href="#L288">288</a></th><td></td></tr><tr><th id="L289"><a href="#L289">289</a></th><td>    <span class="c"># if there is no signal region found associated with the SAF file</span></td></tr><tr><th id="L290"><a href="#L290">290</a></th><td>    <span class="k">if</span> assoc_SR <span class="o">==</span> <span class="s">""</span><span class="p">:</span></td></tr><tr><th id="L291"><a href="#L291">291</a></th><td>        <span class="k">print</span> <span class="s">'Warning: no region found associated with the SAF file "'</span> <span class="o">+</span> \</td></tr><tr><th id="L292"><a href="#L292">292</a></th><td>          <span class="nb">file</span> <span class="o">+</span> <span class="s">'"; will be skipped.'</span></td></tr><tr><th id="L293"><a href="#L293">293</a></th><td>        <span class="k">continue</span></td></tr><tr><th id="L294"><a href="#L294">294</a></th><td></td></tr><tr><th id="L295"><a href="#L295">295</a></th><td>    <span class="c"># otherwise, read the acceptance times efficiency from the SAF file</span></td></tr><tr><th id="L296"><a href="#L296">296</a></th><td>    <span class="k">try</span><span class="p">:</span></td></tr><tr><th id="L297"><a href="#L297">297</a></th><td>        SAF_cutflow <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="nb">file</span><span class="p">)</span></td></tr><tr><th id="L298"><a href="#L298">298</a></th><td>    <span class="k">except</span> <span class="ne">IOError</span> <span class="k">as</span> e<span class="p">:</span></td></tr><tr><th id="L299"><a href="#L299">299</a></th><td>        <span class="k">print</span> <span class="s">'I/O error({0}): {1}'</span><span class="o">.</span>format<span class="p">(</span>e<span class="o">.</span>errno<span class="p">,</span> e<span class="o">.</span>strerror<span class="p">)</span></td></tr><tr><th id="L300"><a href="#L300">300</a></th><td>        <span class="k">print</span> <span class="s">'Cannot open the XML info file "'</span> <span class="o">+</span> <span class="nb">file</span> <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L301"><a href="#L301">301</a></th><td>        sys<span class="o">.</span>exit<span class="p">()</span></td></tr><tr><th id="L302"><a href="#L302">302</a></th><td></td></tr><tr><th id="L303"><a href="#L303">303</a></th><td>    in_initialcounter <span class="o">=</span> <span class="bp">False</span></td></tr><tr><th id="L304"><a href="#L304">304</a></th><td>    in_counter <span class="o">=</span> <span class="bp">False</span></td></tr><tr><th id="L305"><a href="#L305">305</a></th><td>    initialnum <span class="o">=</span> <span class="mi">0</span></td></tr><tr><th id="L306"><a href="#L306">306</a></th><td>    finalnum <span class="o">=</span> <span class="mi">0</span></td></tr><tr><th id="L307"><a href="#L307">307</a></th><td>    <span class="k">for</span> line <span class="ow">in</span> SAF_cutflow<span class="p">:</span></td></tr><tr><th id="L308"><a href="#L308">308</a></th><td>        line <span class="o">=</span> line<span class="o">.</span>rstrip<span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span><span class="o">.</span>strip<span class="p">()</span></td></tr><tr><th id="L309"><a href="#L309">309</a></th><td>        <span class="k">if</span> line<span class="p">[:</span><span class="mi">16</span><span class="p">]</span> <span class="o">==</span> <span class="s">"&lt;InitialCounter&gt;"</span><span class="p">:</span></td></tr><tr><th id="L310"><a href="#L310">310</a></th><td>            in_initialcounter <span class="o">=</span> <span class="bp">True</span></td></tr><tr><th id="L311"><a href="#L311">311</a></th><td>            <span class="k">continue</span></td></tr><tr><th id="L312"><a href="#L312">312</a></th><td>        <span class="k">if</span> line<span class="p">[:</span><span class="mi">17</span><span class="p">]</span> <span class="o">==</span> <span class="s">"&lt;/InitialCounter&gt;"</span><span class="p">:</span></td></tr><tr><th id="L313"><a href="#L313">313</a></th><td>            in_initialcounter <span class="o">=</span> <span class="bp">False</span></td></tr><tr><th id="L314"><a href="#L314">314</a></th><td>            <span class="k">continue</span></td></tr><tr><th id="L315"><a href="#L315">315</a></th><td>        <span class="k">if</span> line<span class="p">[:</span><span class="mi">9</span><span class="p">]</span> <span class="o">==</span> <span class="s">"&lt;Counter&gt;"</span><span class="p">:</span></td></tr><tr><th id="L316"><a href="#L316">316</a></th><td>            in_counter <span class="o">=</span> <span class="bp">True</span></td></tr><tr><th id="L317"><a href="#L317">317</a></th><td>            <span class="k">continue</span></td></tr><tr><th id="L318"><a href="#L318">318</a></th><td>        <span class="k">if</span> line<span class="p">[:</span><span class="mi">10</span><span class="p">]</span> <span class="o">==</span> <span class="s">"&lt;/Counter&gt;"</span><span class="p">:</span></td></tr><tr><th id="L319"><a href="#L319">319</a></th><td>            in_counter <span class="o">=</span> <span class="bp">False</span></td></tr><tr><th id="L320"><a href="#L320">320</a></th><td>            <span class="k">continue</span></td></tr><tr><th id="L321"><a href="#L321">321</a></th><td></td></tr><tr><th id="L322"><a href="#L322">322</a></th><td>        <span class="k">if</span> in_initialcounter <span class="ow">and</span> line<span class="p">[</span><span class="o">-</span><span class="mi">14</span><span class="p">:]</span> <span class="o">==</span> <span class="s">"sum of weights"</span><span class="p">:</span></td></tr><tr><th id="L323"><a href="#L323">323</a></th><td>            <span class="k">try</span><span class="p">:</span></td></tr><tr><th id="L324"><a href="#L324">324</a></th><td>                initialnum <span class="o">=</span> <span class="nb">float</span><span class="p">(</span>line<span class="o">.</span>split<span class="p">()[</span><span class="mi">0</span><span class="p">])</span></td></tr><tr><th id="L325"><a href="#L325">325</a></th><td>            <span class="k">except</span><span class="p">:</span></td></tr><tr><th id="L326"><a href="#L326">326</a></th><td>                <span class="k">print</span> <span class="s">'Invalid SAF file "'</span> <span class="o">+</span> <span class="nb">file</span> <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L327"><a href="#L327">327</a></th><td>                <span class="k">print</span> <span class="s">'The initial number of events cannot be read.'</span></td></tr><tr><th id="L328"><a href="#L328">328</a></th><td>                sys<span class="o">.</span>exit<span class="p">()</span></td></tr><tr><th id="L329"><a href="#L329">329</a></th><td></td></tr><tr><th id="L330"><a href="#L330">330</a></th><td>        <span class="k">if</span> in_counter <span class="ow">and</span> line<span class="p">[</span><span class="o">-</span><span class="mi">14</span><span class="p">:]</span> <span class="o">==</span> <span class="s">"sum of weights"</span><span class="p">:</span></td></tr><tr><th id="L331"><a href="#L331">331</a></th><td>            <span class="k">try</span><span class="p">:</span></td></tr><tr><th id="L332"><a href="#L332">332</a></th><td>                finalnum <span class="o">=</span> <span class="nb">float</span><span class="p">(</span>line<span class="o">.</span>split<span class="p">()[</span><span class="mi">0</span><span class="p">])</span></td></tr><tr><th id="L333"><a href="#L333">333</a></th><td>            <span class="k">except</span><span class="p">:</span></td></tr><tr><th id="L334"><a href="#L334">334</a></th><td>                <span class="k">print</span> <span class="s">'Invalid SAF file "'</span> <span class="o">+</span> <span class="nb">file</span> <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L335"><a href="#L335">335</a></th><td>                <span class="k">print</span> <span class="s">'The number of events cannot be read.'</span></td></tr><tr><th id="L336"><a href="#L336">336</a></th><td>                sys<span class="o">.</span>exit<span class="p">()</span></td></tr><tr><th id="L337"><a href="#L337">337</a></th><td></td></tr><tr><th id="L338"><a href="#L338">338</a></th><td>    <span class="k">if</span> initialnum <span class="o">==</span> <span class="mi">0</span><span class="p">:</span></td></tr><tr><th id="L339"><a href="#L339">339</a></th><td>        <span class="k">print</span> <span class="s">'Invalid SAF file "'</span> <span class="o">+</span> <span class="nb">file</span> <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L340"><a href="#L340">340</a></th><td>        <span class="k">print</span> <span class="s">'The number of events cannot be read.'</span></td></tr><tr><th id="L341"><a href="#L341">341</a></th><td>        sys<span class="o">.</span>exit<span class="p">()</span></td></tr><tr><th id="L342"><a href="#L342">342</a></th><td></td></tr><tr><th id="L343"><a href="#L343">343</a></th><td>    <span class="k">for</span> regionid <span class="ow">in</span> signalregions<span class="p">:</span></td></tr><tr><th id="L344"><a href="#L344">344</a></th><td>        <span class="c"># for each SR id as defined in the XML info file...</span></td></tr><tr><th id="L345"><a href="#L345">345</a></th><td>        <span class="k">for</span> individualSR <span class="ow">in</span> regionid<span class="o">.</span>split<span class="p">(</span><span class="s">";"</span><span class="p">):</span></td></tr><tr><th id="L346"><a href="#L346">346</a></th><td>            <span class="c"># ...look for each individual SR...</span></td></tr><tr><th id="L347"><a href="#L347">347</a></th><td>            <span class="k">if</span> individualSR <span class="o">==</span> assoc_SR<span class="p">:</span></td></tr><tr><th id="L348"><a href="#L348">348</a></th><td>                <span class="c"># ... if it matches with the SAF file read, add the</span></td></tr><tr><th id="L349"><a href="#L349">349</a></th><td>                <span class="c"># acceptance*efficiency to existing value</span></td></tr><tr><th id="L350"><a href="#L350">350</a></th><td>                signalregions<span class="p">[</span>regionid<span class="p">][</span><span class="s">"acceff"</span><span class="p">]</span> <span class="o">+=</span> finalnum <span class="o">/</span> initialnum</td></tr><tr><th id="L351"><a href="#L351">351</a></th><td></td></tr><tr><th id="L352"><a href="#L352">352</a></th><td><span class="c">######################################</span></td></tr><tr><th id="L353"><a href="#L353">353</a></th><td><span class="c"># then, get the cross section info</span></td></tr><tr><th id="L354"><a href="#L354">354</a></th><td><span class="c"># if not given as command-line</span></td></tr><tr><th id="L355"><a href="#L355">355</a></th><td><span class="c"># argument, look into SAF file</span></td></tr><tr><th id="L356"><a href="#L356">356</a></th><td><span class="c">######################################</span></td></tr><tr><th id="L357"><a href="#L357">357</a></th><td></td></tr><tr><th id="L358"><a href="#L358">358</a></th><td><span class="k">if</span> xsection <span class="o">==</span> <span class="mi">0</span><span class="p">:</span> <span class="c"># not given as command-line argument</span></td></tr><tr><th id="L359"><a href="#L359">359</a></th><td>    mainSAF_path <span class="o">=</span> analysis_path <span class="o">+</span> <span class="s">"/Output/"</span> <span class="o">+</span> \</td></tr><tr><th id="L360"><a href="#L360">360</a></th><td>    bench_name <span class="o">+</span> <span class="s">"/"</span> <span class="o">+</span> bench_name <span class="o">+</span> <span class="s">".saf"</span></td></tr><tr><th id="L361"><a href="#L361">361</a></th><td></td></tr><tr><th id="L362"><a href="#L362">362</a></th><td>    <span class="k">try</span><span class="p">:</span></td></tr><tr><th id="L363"><a href="#L363">363</a></th><td>        mainSAF <span class="o">=</span> <span class="nb">open</span><span class="p">(</span>mainSAF_path<span class="p">)</span></td></tr><tr><th id="L364"><a href="#L364">364</a></th><td>    <span class="k">except</span> <span class="ne">IOError</span> <span class="k">as</span> e<span class="p">:</span></td></tr><tr><th id="L365"><a href="#L365">365</a></th><td>        <span class="k">print</span> <span class="s">'I/O error({0}): {1}'</span><span class="o">.</span>format<span class="p">(</span>e<span class="o">.</span>errno<span class="p">,</span> e<span class="o">.</span>strerror<span class="p">)</span></td></tr><tr><th id="L366"><a href="#L366">366</a></th><td>        <span class="k">print</span> <span class="s">'Cannot open the XML info file "'</span> <span class="o">+</span> mainSAF_path <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L367"><a href="#L367">367</a></th><td>        sys<span class="o">.</span>exit<span class="p">()</span></td></tr><tr><th id="L368"><a href="#L368">368</a></th><td></td></tr><tr><th id="L369"><a href="#L369">369</a></th><td>    nline <span class="o">=</span> <span class="mi">0</span></td></tr><tr><th id="L370"><a href="#L370">370</a></th><td>    <span class="k">for</span> line <span class="ow">in</span> mainSAF<span class="p">:</span></td></tr><tr><th id="L371"><a href="#L371">371</a></th><td>        line <span class="o">=</span> line<span class="o">.</span>rstrip<span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span><span class="o">.</span>strip<span class="p">()</span></td></tr><tr><th id="L372"><a href="#L372">372</a></th><td>        <span class="k">if</span> line<span class="p">[:</span><span class="mi">18</span><span class="p">]</span> <span class="o">==</span> <span class="s">"&lt;SampleGlobalInfo&gt;"</span><span class="p">:</span></td></tr><tr><th id="L373"><a href="#L373">373</a></th><td>            nline <span class="o">=</span> <span class="mi">1</span></td></tr><tr><th id="L374"><a href="#L374">374</a></th><td>            <span class="k">continue</span></td></tr><tr><th id="L375"><a href="#L375">375</a></th><td>        <span class="k">if</span> nline <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span></td></tr><tr><th id="L376"><a href="#L376">376</a></th><td>            nline <span class="o">+=</span> <span class="mi">1</span></td></tr><tr><th id="L377"><a href="#L377">377</a></th><td>        <span class="k">if</span> nline <span class="o">==</span> <span class="mi">3</span><span class="p">:</span></td></tr><tr><th id="L378"><a href="#L378">378</a></th><td>            <span class="k">try</span><span class="p">:</span></td></tr><tr><th id="L379"><a href="#L379">379</a></th><td>                xsection <span class="o">=</span> <span class="nb">float</span><span class="p">(</span>line<span class="o">.</span>split<span class="p">()[</span><span class="mi">0</span><span class="p">])</span></td></tr><tr><th id="L380"><a href="#L380">380</a></th><td>            <span class="k">except</span><span class="p">:</span></td></tr><tr><th id="L381"><a href="#L381">381</a></th><td>                <span class="k">print</span> <span class="s">'Invalid SAF file "'</span> <span class="o">+</span> mainSAF_path <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L382"><a href="#L382">382</a></th><td>                <span class="k">print</span> <span class="s">'The cross section cannot be read.'</span></td></tr><tr><th id="L383"><a href="#L383">383</a></th><td>                sys<span class="o">.</span>exit<span class="p">()</span></td></tr><tr><th id="L384"><a href="#L384">384</a></th><td></td></tr><tr><th id="L385"><a href="#L385">385</a></th><td>            <span class="k">if</span> xsection <span class="o">&lt;=</span> <span class="mf">0.</span><span class="p">:</span></td></tr><tr><th id="L386"><a href="#L386">386</a></th><td>                <span class="k">print</span> <span class="s">'Invalid cross section of '</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span>xsection<span class="p">)</span> <span class="o">+</span> <span class="s">' pb.'</span></td></tr><tr><th id="L387"><a href="#L387">387</a></th><td>                <span class="k">print</span> <span class="s">'The cross section cannot be read from the SAF file "'</span> <span class="o">+</span> \</td></tr><tr><th id="L388"><a href="#L388">388</a></th><td>                  mainSAF_path <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L389"><a href="#L389">389</a></th><td>                sys<span class="o">.</span>exit<span class="p">()</span></td></tr><tr><th id="L390"><a href="#L390">390</a></th><td>            <span class="k">break</span></td></tr><tr><th id="L391"><a href="#L391">391</a></th><td></td></tr><tr><th id="L392"><a href="#L392">392</a></th><td><span class="c">######################################</span></td></tr><tr><th id="L393"><a href="#L393">393</a></th><td><span class="c"># now, we have the information on the</span></td></tr><tr><th id="L394"><a href="#L394">394</a></th><td><span class="c"># cross section (variable xsection),</span></td></tr><tr><th id="L395"><a href="#L395">395</a></th><td><span class="c"># the luminosity (variable lumi),</span></td></tr><tr><th id="L396"><a href="#L396">396</a></th><td><span class="c"># the number of background events,</span></td></tr><tr><th id="L397"><a href="#L397">397</a></th><td><span class="c"># observed events, and the acceptance</span></td></tr><tr><th id="L398"><a href="#L398">398</a></th><td><span class="c"># times efficiency (in the dictionary</span></td></tr><tr><th id="L399"><a href="#L399">399</a></th><td><span class="c"># signalregions)</span></td></tr><tr><th id="L400"><a href="#L400">400</a></th><td><span class="c">#</span></td></tr><tr><th id="L401"><a href="#L401">401</a></th><td><span class="c"># we can proceed with the exclusion</span></td></tr><tr><th id="L402"><a href="#L402">402</a></th><td><span class="c">######################################</span></td></tr><tr><th id="L403"><a href="#L403">403</a></th><td></td></tr><tr><th id="L404"><a href="#L404">404</a></th><td><span class="k">if</span> xsection <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span></td></tr><tr><th id="L405"><a href="#L405">405</a></th><td>    <span class="c"># first, decide which signal regions yields the best expected limit</span></td></tr><tr><th id="L406"><a href="#L406">406</a></th><td>    final_limit <span class="o">=</span> exclusion_check<span class="p">(</span>xsection<span class="p">)</span></td></tr><tr><th id="L407"><a href="#L407">407</a></th><td></td></tr><tr><th id="L408"><a href="#L408">408</a></th><td>    <span class="k">print</span> <span class="s">'</span><span class="se">\n</span><span class="s">This signal is excluded at the '</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="nb">round</span><span class="p">(</span>final_limit<span class="o">*</span><span class="mf">100.</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span> <span class="o">+</span> \</td></tr><tr><th id="L409"><a href="#L409">409</a></th><td>      <span class="s">'% CL (CLs='</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="nb">round</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span>final_limit<span class="p">,</span><span class="mi">3</span><span class="p">))</span> <span class="o">+</span> <span class="s">').'</span></td></tr><tr><th id="L410"><a href="#L410">410</a></th><td><span class="k">else</span><span class="p">:</span></td></tr><tr><th id="L411"><a href="#L411">411</a></th><td>    <span class="c"># if a  negative cross section is given as input,</span></td></tr><tr><th id="L412"><a href="#L412">412</a></th><td>    <span class="c"># the code is looking for the cross section that is excluded at 95% CL</span></td></tr><tr><th id="L413"><a href="#L413">413</a></th><td>    <span class="c"># using a root-finding algorithm</span></td></tr><tr><th id="L414"><a href="#L414">414</a></th><td></td></tr><tr><th id="L415"><a href="#L415">415</a></th><td>    <span class="k">print</span> <span class="s">'Negative cross section is given.'</span></td></tr><tr><th id="L416"><a href="#L416">416</a></th><td>    <span class="k">print</span> <span class="s">'Will look for the cross section that is excluded at 95% CL'</span></td></tr><tr><th id="L417"><a href="#L417">417</a></th><td>    <span class="k">print</span> <span class="s">'using a root-finding algorithm.</span><span class="se">\n</span><span class="s">'</span></td></tr><tr><th id="L418"><a href="#L418">418</a></th><td></td></tr><tr><th id="L419"><a href="#L419">419</a></th><td>    <span class="c"># need to tune the lower and upper bound (corresponding to a cross section</span></td></tr><tr><th id="L420"><a href="#L420">420</a></th><td>    <span class="c"># that we know is not excluded or excluded, respectively)</span></td></tr><tr><th id="L421"><a href="#L421">421</a></th><td>    lowerb <span class="o">=</span> <span class="mf">1.</span> <span class="c"># 1 pb</span></td></tr><tr><th id="L422"><a href="#L422">422</a></th><td>    upperb <span class="o">=</span> <span class="mf">1.</span> <span class="c"># 1 pb</span></td></tr><tr><th id="L423"><a href="#L423">423</a></th><td>    <span class="k">while</span> exclusion_check95<span class="p">(</span>lowerb<span class="p">)</span> <span class="o">&gt;</span> <span class="mf">0.</span><span class="p">:</span></td></tr><tr><th id="L424"><a href="#L424">424</a></th><td>        lowerb <span class="o">*=</span> <span class="mf">0.1</span></td></tr><tr><th id="L425"><a href="#L425">425</a></th><td>    <span class="k">while</span> exclusion_check95<span class="p">(</span>upperb<span class="p">)</span> <span class="o">&lt;</span> <span class="mf">0.</span><span class="p">:</span></td></tr><tr><th id="L426"><a href="#L426">426</a></th><td>        upperb <span class="o">*=</span> <span class="mf">10.</span></td></tr><tr><th id="L427"><a href="#L427">427</a></th><td></td></tr><tr><th id="L428"><a href="#L428">428</a></th><td>    <span class="k">print</span> <span class="s">'</span><span class="se">\n</span><span class="s">lower and upper bounds for the root-finding algorithm'</span> <span class="o">+</span> \</td></tr><tr><th id="L429"><a href="#L429">429</a></th><td>      <span class="s">' have been found: [</span><span class="si">%.2e</span><span class="s"> </span><span class="si">%.2e</span><span class="s">] pb</span><span class="se">\n</span><span class="s">'</span> <span class="o">%</span> <span class="p">(</span>lowerb<span class="p">,</span> upperb<span class="p">)</span></td></tr><tr><th id="L430"><a href="#L430">430</a></th><td></td></tr><tr><th id="L431"><a href="#L431">431</a></th><td>    final_limit <span class="o">=</span> scipy<span class="o">.</span>optimize<span class="o">.</span>brentq<span class="p">(</span>exclusion_check95<span class="p">,</span> lowerb<span class="p">,</span> upperb<span class="p">)</span></td></tr><tr><th id="L432"><a href="#L432">432</a></th><td></td></tr><tr><th id="L433"><a href="#L433">433</a></th><td>    <span class="k">print</span> <span class="s">'</span><span class="se">\n</span><span class="s">The excluded cross section at 2 sigma is </span><span class="si">%.5E</span><span class="s"> pb.'</span> <span class="o">%</span> final_limit</td></tr><tr><th id="L434"><a href="#L434">434</a></th><td></td></tr><tr><th id="L435"><a href="#L435">435</a></th><td><span class="c"># finally, write the results in an output file</span></td></tr><tr><th id="L436"><a href="#L436">436</a></th><td>output_path <span class="o">=</span> analysis_path <span class="o">+</span> <span class="s">"/Output/"</span> <span class="o">+</span> \</td></tr><tr><th id="L437"><a href="#L437">437</a></th><td>    bench_name <span class="o">+</span> <span class="s">"/"</span> <span class="o">+</span> analysis_name <span class="o">+</span> <span class="s">"_"</span> <span class="o">+</span> run_number <span class="o">+</span> <span class="s">".out"</span></td></tr><tr><th id="L438"><a href="#L438">438</a></th><td></td></tr><tr><th id="L439"><a href="#L439">439</a></th><td><span class="k">try</span><span class="p">:</span></td></tr><tr><th id="L440"><a href="#L440">440</a></th><td>    output <span class="o">=</span> <span class="nb">open</span><span class="p">(</span>output_path<span class="p">,</span> <span class="s">"w"</span><span class="p">)</span></td></tr><tr><th id="L441"><a href="#L441">441</a></th><td><span class="k">except</span> <span class="ne">IOError</span> <span class="k">as</span> e<span class="p">:</span></td></tr><tr><th id="L442"><a href="#L442">442</a></th><td>    <span class="k">print</span> <span class="s">'I/O error({0}): {1}'</span><span class="o">.</span>format<span class="p">(</span>e<span class="o">.</span>errno<span class="p">,</span> e<span class="o">.</span>strerror<span class="p">)</span></td></tr><tr><th id="L443"><a href="#L443">443</a></th><td>    <span class="k">print</span> <span class="s">'Cannot create the output file "'</span> <span class="o">+</span> output_path <span class="o">+</span> <span class="s">'".'</span></td></tr><tr><th id="L444"><a href="#L444">444</a></th><td>    sys<span class="o">.</span>exit<span class="p">()</span></td></tr><tr><th id="L445"><a href="#L445">445</a></th><td></td></tr><tr><th id="L446"><a href="#L446">446</a></th><td>output<span class="o">.</span>write<span class="p">(</span>bestSR<span class="o">+</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span>final_limit<span class="p">))</span></td></tr><tr><th id="L447"><a href="#L447">447</a></th><td>output<span class="o">.</span>close<span class="p">()</span></td></tr></tbody></table>

        </div>
    </div>
    <div id="altlinks">
      <h3>Download in other formats:</h3>
      <ul>
        <li class="last first">
          <a rel="nofollow" href="/raw-attachment/wiki/PhysicsAnalysisDatabase/exclusion_CLs.py">Original Format</a>
        </li>
      </ul>
    </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">Powered by <a href="/about"><strong>Trac 0.12.3</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.</p>
      <p class="right">Visit the Trac open source project at<br /><a href="http://trac.edgewall.org/">http://trac.edgewall.org/</a></p>
    </div>
    <div id="sitefooter">
    </div>
  </body>
</html>